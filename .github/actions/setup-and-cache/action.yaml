name: Setup and cache
description: Setup for node, pnpm and cache for browser testing binaries
inputs:
  node-version:
    required: false
    description: Node version for setup-node
    default: 18.x

runs:
  using: composite

  steps:
    - name: Install pnpm
      uses: pnpm/action-setup@v2

    - name: Set node version to ${{ inputs.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version-file: ".nvmrc"

    - name: Enable Corepack
      shell: bash
      run: corepack enable

    - name: Install moonrepo
      shell: bash
      run: curl -fsSl https://moonrepo.dev/install.sh | bash

    - uses: pnpm/action-setup@v2
      name: Install pnpm
      id: pnpm-install
      with:
        version: 7.27.0
        run_install: |
          - recursive: true

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Resolve Cypress package versions
      id: resolve-cypress-versions
      shell: bash
      run: >
        echo "$(
          node -e "
            const fs = require('fs');
            const lockfile = fs.readFileSync('./pnpm-lock.yaml', 'utf8');
            const cypressVersion = lockfile.match(/cypress: (\d+\.\d+\.\d+)/)[1];
            console.log('CYPRESS_VERSION=' + cypressVersion);
          "
        )" >> $GITHUB_OUTPUT
    - name: Cache Cypress v${{ steps.resolve-cypress-versions.outputs.CYPRESS_VERSION }}
      uses: actions/cache@v3
      if: success() || failure()
      id: cypress-cache
      with:
        path: ${{ env.CYPRESS_CACHE_FOLDER }}
        key: ${{ runner.os }}-cypress-${{ steps.resolve-cypress-versions.outputs.CYPRESS_VERSION }}
        restore-keys: |
          ${{ runner.os }}-cypress-
    - name: Resolve playwright versions
      id: resolve-playwright-versions
      shell: bash
      run: >
        echo "$(
          node -e "
            const fs = require('fs');
            const lockfile = fs.readFileSync('./pnpm-lock.yaml', 'utf8');
            const playwrightVersion = lockfile.match(/playwright: (\d+\.\d+\.\d+)/)[1];
            console.log('PLAYWRIGHT_VERSION=' + playwrightVersion);
          "
        )" >> $GITHUB_OUTPUT
    - name: Cache Playwright v${{ steps.resolve-playwright-versions.outputs.PLAYWRIGHT_VERSION }}
      uses: actions/cache@v3
      if: success() || failure()
      id: playwright-cache
      with:
        path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
        key: ${{ runner.os }}-playwright-${{ steps.resolve-playwright-versions.outputs.PLAYWRIGHT_VERSION }}
        restore-keys: |
          ${{ runner.os }}-playwright-
    - name: Resolve puppeteer versions
      id: resolve-puppeteer-versions
      shell: bash
      run: >
        echo "$(
          node -e "
            const fs = require('fs');
            const lockfile = fs.readFileSync('./pnpm-lock.yaml', 'utf8');
            const puppeteerVersion = lockfile.match(/puppeteer: (\d+\.\d+\.\d+)/)[1];
            console.log('PUPPETEER_VERSION=' + puppeteerVersion);
          "
        )" >> $GITHUB_OUTPUT
    - name: Cache Puppeteer v${{ steps.resolve-puppeteer-versions.outputs.PUPPETEER_VERSION }}
      uses: actions/cache@v3
      if: success() || failure()
      id: puppeteer-cache
      with:
        path: ${{ env.PUPPETEER_DOWNLOAD_PATH }}
        key: ${{ runner.os }}-puppeteer-${{ steps.resolve-puppeteer-versions.outputs.PUPPETEER_VERSION }}
        restore-keys: |
          ${{ runner.os }}-puppeteer-
